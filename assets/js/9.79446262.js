(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{368:function(t,e,_){"use strict";_.r(e);var a=_(44),v=Object(a.a)({},(function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"_20210614-小记"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_20210614-小记"}},[t._v("#")]),t._v(" 20210614 小记")]),t._v(" "),_("h2",{attrs:{id:"一、前言"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一、前言"}},[t._v("#")]),t._v(" 一、前言")]),t._v(" "),_("p",[t._v("今天是2021年6月14日，从2020年2月14日开始学习前端到现在过去了整整 16 个月。今天我不知道干什么就想过来写一点东西。做前端这个工作到这个月月底就要满一年了，谈一谈感受。\n​")]),t._v(" "),_("p",[t._v("计算机领域的东西真的很多，围绕着计算机，衍生出很多很多。最近稍微学习一点计算机相关知识，发现这个东西真的太猛了。学校里学的知识真的很有用，比如 C 语言、微机原理、FPGA 这些硬核内容，我以为永远不会碰这些东西了，现在为了做开发了嘛，觉得这些东西有用啊，对于计算机语言编译、指令执行、CPU 的理解非常有帮助。为什么要了解这个呢？也算个兴趣吧，我就是想知道我写的代码在计算机里是怎么运行的怎么出结果的，当然，现在也只是懵懵懂懂，没有完全理解透哈。\n​")]),t._v(" "),_("h2",{attrs:{id:"二、一些提升"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二、一些提升"}},[t._v("#")]),t._v(" 二、一些提升")]),t._v(" "),_("p",[t._v("这段时间，工作经验提升了一些，技术水平提升了一些，都有一些进步。然后我们开发部有3个同事先后离职，让我有点小伤感，分别是设计师、前端、后端。在我眼里他们属于一流的水平，真的，各有不同的亮点，默默记下了，以后偷学，嘿嘿。")]),t._v(" "),_("p",[t._v("我觉得有时候人的情绪就像那基金一样，看时间曲线，会有高潮和低谷，对于未来几个月无法做到准确预测。我感觉遇到了一点小低谷，不过从长期来看，相信这支基金很看好值得长期持有，因为很相信自己现在做的东西是有价值的。")]),t._v(" "),_("p",[t._v("说说这 16 个月的工作经验和技术水平哪方面有提升吧。")]),t._v(" "),_("p",[t._v("工作经验的提升，首先是沟通。我们团队人员不多，直接使用 QQ 或口头表达需求，这里面的套路也不多，就是把东西表达清楚，能不能做，为什么不能做，逻辑理清楚，正常交流就行。\n然后是网站技术架构，就是我们项目网站的服务怎么进行提供的。简单知道了之后，就能够明确自己做的工作内容是属于哪部分的了，虽然很简单，但很重要，不然就像个呆子了，每天做着事情，但不知道在干嘛。\n最后是前端经验。这是个不错的经验，让我遇到了 jQuery、React、微信小程序、uniapp，技术栈还是挺杂的。这说明我前端队友是真的强，能同时兼顾很多个项目。以前的我认为同时搞这么多东西是不可能的，直到我现在眼睁睁地看到了。\n​")]),t._v(" "),_("p",[t._v("技术水平的提升，总结一下，广度有了，深度不够。能够分析出一些原因，一个是技术栈比较杂，我刚来的时候，略懂 React 和 Vue，能凑合写，后面深入业务之后，因为比较新手，必须增加知识面才能写代码，然后技术栈的扩展也有一定的学习成本。第二个原因是我在搞其他东西，看了一些计算机组成原理、Node、TypeScript、算法、设计模式。这些东西我就看了前面的内容，也就没有往后看了，又因为没有实践的地方，看了容易忘。能了解一些计算机的其他知识蛮不错的，不要当成学习负担，暂时当成爱好吧。现在我觉得技术水平提升开始要从深度上发展。\n​")]),t._v(" "),_("h2",{attrs:{id:"三、说说以后"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#三、说说以后"}},[t._v("#")]),t._v(" 三、说说以后")]),t._v(" "),_("p",[t._v("讲讲前端吧，我应该可以专心写 React 了，这是我比较喜欢的技术栈了，钻研一下，找轮子造轮子等等，不想搞其他虚的。什么 Vue、微信小程序先放一边，虽然我对他们很感兴趣。听说学习 TypeScript 的性价比很高，的确，我看到不止一个开源的前端项目使用 TypeScript 写了，这个也暂时放一放吧。\n​")]),t._v(" "),_("p",[t._v("总而言之，其他全部东西都放一放，我先把 React 里怎么把一个完整的编辑器项目跑起来的原理搞清楚，再考虑别的。真的，舍不得他另一个前端队友走，555。简单看了一下留下来的代码“遗产”，技术栈是 Webpack + React + Redux + draft.js + three.js。我感觉，最重要的不是技术栈，技术栈看官网学习用法即可，最重要的是实践，了解整个项目是怎么跑起来的，里面的功能是怎么做的，这是当下 T0 级别的任务。")]),t._v(" "),_("p",[t._v("最近在看“计算机组成原理”相关的文章，把我以前大学学的知识串起来了，非常非常 nice，等我把前端知识的深度再提升了一些再回头看。目前学习优先级是这样的：")]),t._v(" "),_("ul",[_("li",[t._v("前端（React + 其他）")]),t._v(" "),_("li",[t._v("数据结构与算法（特别重要）")]),t._v(" "),_("li",[t._v("计算机网络（一般重要）")]),t._v(" "),_("li",[t._v("计算机组成原理（当兴趣看）")])]),t._v(" "),_("p",[t._v("自上而下地学习，定个小目标，提升前端深度，过一遍数据结构与算法的基本知识，今年应该可以做到，这个愿望就实现了，很 nice。\n​")]),t._v(" "),_("p",[_("em",[t._v("「@浪里淘沙的小法师」")])])])}),[],!1,null,null,null);e.default=v.exports}}]);